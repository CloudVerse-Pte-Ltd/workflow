on:
  workflow_call:
    inputs:
      SERVICE:
        type: string
        required: true
    secrets:
      GCP_CREDS:
        required: true
      SLACK_WEBHOOK:
        required: true
      GH_TOKEN:
        required: true

env:
  REGISTRY: asia-southeast1-docker.pkg.dev

jobs:
  InitInfo:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      environment: ${{ steps.environment.outputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: version
        run: |
          set -e
          echo "version=$(git describe --tags `git rev-list --tags --max-count=1`)-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          set +e
      - id: environment
        run: |
          [[ $GITHUB_REF_NAME == "main" ]] && echo "environment=dev" >> $GITHUB_OUTPUT || true
          [[ $GITHUB_REF_NAME == "test" ]] && echo "environment=test" >> $GITHUB_OUTPUT || true
          [[ $GITHUB_REF_NAME == "production" ]] && echo "environment=staging" >> $GITHUB_OUTPUT || true
          [[ $GITHUB_REF_TYPE == "tag" ]] && echo "environment=prod" >> $GITHUB_OUTPUT || true

  Build:
    runs-on: ubuntu-latest
    needs: InitInfo
    outputs:
      version: ${{ steps.version.outputs.version }}
      environment: ${{ steps.environment.outputs.environment }}
    steps:
      - name: Slack notify start build
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: cloudverse-devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: "`${{ inputs.SERVICE }}` build `started` on `${{ needs.InitInfo.outputs.environment }}`"
          SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDS }}'
      - name: Log in to the Container registry
        run: gcloud auth configure-docker asia-southeast1-docker.pkg.dev
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Krakend replace for dev
        if: needs.InitInfo.outputs.environment == 'dev'
        run: |
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/dev-platform-identity-svc|g" ./config/partials/cloudverse_id_auth.tmpl
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/dev-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/dev-cloud-provider-driver-svc|g" ./config/settings/open_api_cloud_provider_driver.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/dev-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver_rest.json
          sed -i "s|http:\/\/platform-budget-svc.test|http:\/\/dev-platform-budget-svc|g" ./config/settings/platform_budget.json
          sed -i "s|http:\/\/platform-alarm-svc.test|http:\/\/dev-platform-alarm-svc|g" ./config/settings/platform_alarm.json
          sed -i "s|http:\/\/platform-iam-svc.test|http:\/\/dev-platform-iam-svc|g" ./config/settings/platform_iam.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/dev-platform-identity-svc|g" ./config/settings/platform_identity.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/dev-platform-identity-svc|g" ./config/settings/platform_identity_rest.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/dev-platform-notification-svc|g" ./config/settings/platform_notification.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/dev-platform-notification-svc|g" ./config/settings/cloudverse_notification_callback.json
          sed -i "s|http:\/\/platform-audit-log-svc.test|http:\/\/dev-platform-audit-log-svc|g" ./config/settings/platform_audit_log.json
          sed -i "s|https:\/\/test-mcp.cloudverse.ai|https:\/\/dev-console.cloudverse.ai|g" ./config/krakend.json
          sed -i "s|http:\/\/cspm.test|http:\/\/dev-cspm|g" ./config/settings/cspm_rest.json
      - name: Krakend replace for test
        if: needs.InitInfo.outputs.environment == 'test'
        run: |
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/test-platform-identity-svc|g" ./config/partials/cloudverse_id_auth.tmpl
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/test-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/test-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver_rest.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/test-cloud-provider-driver-svc|g" ./config/settings/open_api_cloud_provider_driver.json
          sed -i "s|http:\/\/platform-budget-svc.test|http:\/\/test-platform-budget-svc|g" ./config/settings/platform_budget.json
          sed -i "s|http:\/\/platform-alarm-svc.test|http:\/\/test-platform-alarm-svc|g" ./config/settings/platform_alarm.json
          sed -i "s|http:\/\/platform-iam-svc.test|http:\/\/test-platform-iam-svc|g" ./config/settings/platform_iam.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/test-platform-identity-svc|g" ./config/settings/platform_identity.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/test-platform-identity-svc|g" ./config/settings/platform_identity_rest.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/test-platform-notification-svc|g" ./config/settings/platform_notification.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/test-platform-notification-svc|g" ./config/settings/cloudverse_notification_callback.json
          sed -i "s|http:\/\/platform-audit-log-svc.test|http:\/\/test-platform-audit-log-svc|g" ./config/settings/platform_audit_log.json
          sed -i "s|http:\/\/test-cloud-discovery-v2.test|http:\/\/test-cloud-discovery-v2|g" ./config/settings/cloud_discovery_v2_rest.json
          sed -i "s|https:\/\/test-mcp.cloudverse.ai|https:\/\/test-console.cloudverse.ai|g" ./config/krakend.json
          sed -i "s|http:\/\/cspm.test|http:\/\/test-cspm|g" ./config/settings/cspm_rest.json
      - name: Krakend replace for staging
        if: needs.InitInfo.outputs.environment == 'staging'
        run: |
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/staging-platform-identity-svc|g" ./config/partials/cloudverse_id_auth.tmpl
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/staging-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/staging-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver_rest.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/staging-cloud-provider-driver-svc|g" ./config/settings/open_api_cloud_provider_driver.json
          sed -i "s|http:\/\/platform-budget-svc.test|http:\/\/staging-platform-budget-svc|g" ./config/settings/platform_budget.json
          sed -i "s|http:\/\/platform-alarm-svc.test|http:\/\/staging-platform-alarm-svc|g" ./config/settings/platform_alarm.json
          sed -i "s|http:\/\/platform-iam-svc.test|http:\/\/staging-platform-iam-svc|g" ./config/settings/platform_iam.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/staging-platform-identity-svc|g" ./config/settings/platform_identity.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/staging-platform-identity-svc|g" ./config/settings/platform_identity_rest.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/staging-platform-notification-svc|g" ./config/settings/platform_notification.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/staging-platform-notification-svc|g" ./config/settings/cloudverse_notification_callback.json
          sed -i "s|http:\/\/platform-audit-log-svc.test|http:\/\/staging-platform-audit-log-svc|g" ./config/settings/platform_audit_log.json
          # sed -i "s|http:\/\/test-cloud-discovery-v2.test|http:\/\/staging-cloud-discovery-v2|g" ./config/settings/cloud_discovery_v2_rest.json
          sed -i "s|https:\/\/test-mcp.cloudverse.ai|https:\/\/staging-console.cloudverse.ai|g" ./config/krakend.json
          sed -i "s|http:\/\/cspm.test|http:\/\/staging-cspm|g" ./config/settings/cspm_rest.json
      - name: Krakend replace for production
        if: needs.InitInfo.outputs.environment == 'prod'
        run: |
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/production-platform-identity-svc|g" ./config/partials/cloudverse_id_auth.tmpl
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/production-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/production-cloud-provider-driver-svc|g" ./config/settings/cloud_provider_driver_rest.json
          sed -i "s|http:\/\/cloud-provider-driver-svc.test|http:\/\/production-cloud-provider-driver-svc|g" ./config/settings/open_api_cloud_provider_driver.json
          sed -i "s|http:\/\/platform-budget-svc.test|http:\/\/production-platform-budget-svc|g" ./config/settings/platform_budget.json
          sed -i "s|http:\/\/platform-alarm-svc.test|http:\/\/production-platform-alarm-svc|g" ./config/settings/platform_alarm.json
          sed -i "s|http:\/\/platform-iam-svc.test|http:\/\/production-platform-iam-svc|g" ./config/settings/platform_iam.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/production-platform-identity-svc|g" ./config/settings/platform_identity.json
          sed -i "s|http:\/\/platform-identity-svc.test|http:\/\/production-platform-identity-svc|g" ./config/settings/platform_identity_rest.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/production-platform-notification-svc|g" ./config/settings/platform_notification.json
          sed -i "s|http:\/\/platform-notification-svc.test|http:\/\/production-platform-notification-svc|g" ./config/settings/cloudverse_notification_callback.json
          sed -i "s|http:\/\/platform-audit-log-svc.test|http:\/\/production-platform-audit-log-svc|g" ./config/settings/platform_audit_log.json
          # sed -i "s|http:\/\/test-cloud-discovery-v2.test|http:\/\/production-cloud-discovery-v2|g" ./config/settings/cloud_discovery_v2_rest.json
          sed -i "s|https:\/\/test-mcp.cloudverse.ai|https:\/\/console.cloudverse.ai|g" ./config/krakend.json
          sed -i "s|http:\/\/cspm.test|http:\/\/production-cspm|g" ./config/settings/cspm_rest.json
      - name: Build docker container
        run: |
          IMAGE="asia-southeast1-docker.pkg.dev/cloudverse-foundation/${{ needs.InitInfo.outputs.environment }}/${{ inputs.SERVICE }}"
          docker buildx build --platform linux/amd64 --push -t ${IMAGE}:${{ needs.InitInfo.outputs.version }} \
            -t ${IMAGE}:latest .

      - name: Slack Notification Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: cloudverse-devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: "`${{ inputs.SERVICE }}` build `success` on `${{ needs.InitInfo.outputs.environment }}`"
          SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Slack Notification Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: cloudverse-devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: "`${{ inputs.SERVICE }}` build `failed` on `${{ needs.InitInfo.outputs.environment }}`"
          SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - id: version
        run: |
          echo "version=${{ needs.InitInfo.outputs.version }}" >> $GITHUB_OUTPUT
      - id: environment
        run: |
          echo "environment=${{ needs.InitInfo.outputs.environment }}" >> $GITHUB_OUTPUT

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    env:
      version: ${{ needs.Build.outputs.version }}
      environment: ${{ needs.Build.outputs.environment }}
      service: ${{ inputs.SERVICE }}
      token: ${{ secrets.GH_TOKEN }}
    steps:
      - run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${token}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/CloudVerse-Pte-Ltd/argocd/actions/workflows/83931042/dispatches \
          -d '{"ref":"main","inputs":{"environment":"'"${environment}"'","service":"'"${service}"'","version": "'"${version}"'"}}'
      - name: Slack Notification Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: cloudverse-devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: "`${{ inputs.SERVICE }}` deploy `started` on `${{ needs.Build.outputs.environment }}`"
          SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Slack Notification Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: cloudverse-devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: "`${{ inputs.SERVICE }}` deploy `failed` on `${{ needs.Build.outputs.environment }}`"
          SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
